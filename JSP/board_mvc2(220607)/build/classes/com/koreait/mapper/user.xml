<?xml version="1.0" encoding="UTF-8"?>
<!-- user와 관련된 쿼리 -->

<!-- MyBatis가 mapper 라는 것을 인식을 할 수 있음 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 mapper를 sqlSession에게 알려줘야 함 -->
<!-- 이 mapper는 User mapper -->
<mapper namespace="User">
	<insert id="join" parameterType="com.koreait.app.user.dao.UserDTO">
		<!-- 필드를 찾아가는 것이 아니라 getter로 찾아가는 것이다. -->
		<!-- 그래서 필드가 없어도 getter만 있어도 그 getter를 찾아간다. -->
		<!-- 배열인 hobby를 dto에서 한 문자열로 만드는 getter로 만들어 그것을 불러온다. -->
		insert into test_user values(#{userid},#{userpw},#{username},
		#{usergender},#{zipcode},#{addr},#{addrdetail},#{addretc},#{hobbystr})
	</insert>

	<!-- id는 구별해주는 값 -->
	<!-- 밖에서 string을 받아오고 결과를 int로 반환할거야 -->
	<!-- #{} : 날아오는 값을 적어주는 곳, 보낸 이름 그대로 작성해도 됨 -->
	<!-- 클래스는 소문자로 기본 자료형은 앞에 _(언더바) -->
	<select id="checkId" parameterType="string" resultType="_int">
		select count(*) from test_user where userid = #{userid}
	</select>
	
	<!-- 결과 반환객체 필드와 sql 결과 컬럼명과 같으면 알아서 setter를 해줘서 반환해준다. -->
	<select id="login" parameterType="hashmap" resultType="com.koreait.app.user.dao.UserDTO">
		<!-- 해쉬맵으로 받아올 때 MyBatis에서는 값이 아니라 키값을 적어야 된다. -->
		select * from test_user where userid = #{userid} and userpw = #{userpw}
	</select>
</mapper>