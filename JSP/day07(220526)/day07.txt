MyBatis
		DTO로 포장을 해서 보낸 객체를 setString 하기 위해 다시 푸는 불편함
		sql문을 모르는 사람은 못 쓰는 불편함
		을 해결하기 위해 쓰는 것

		모델과 DB의 매개체 역할의 프레임워크 - ORM(Object Relational Mapping)
									객체와 DB의 테이블을 매핑하는
		Java 소스코드 안에 SQL문을 작성하면 코드가 길어지고 섞여 있어서
		유지보수 및 분업이 쉽지 않아진다. MyBatis는 기존 JDBC 방식과는 달리
		SQL문을 XML 파일에 작성함으로써 코드가 줄어들고 SQL문 수정이 편해진다.
		또한 DBCP를 사용하여 커넥션을 여러개 생성하기 때문에 JDBC만 사용하는 것보다
		작업 효율과 가독성이 좋아진다.

		MyBatis JPA

		iBatis(jdk 1.4 이상부터 지원) -> MyBatis(jdk 1.5 이상부터 지원)
		iBatis와 MyBatis의 차이점은 몇 개의 문법 및 사용용어(명칭, 단어) 변경 등이다.

MyBatis 설치
		https://blog.mybatis.org > Products > MyBatis3 Download 클릭
		> 3.5.9 버전 다운로드

MyBatis 한국어 설명
		https://mybatis.org/mybatis-3/ko/index.html

MyBatis 작동원리
		1. SqlSessionFactoryBuilder는 SqlSessionFactory를 생성하기 위한
		MyBatis 구성파일을 읽는다.
		2. 클라이언트가 응용 프로그램에 대한 프로세스를 요청한다.
		3. Application은 SqlSessionFactoryBuilder를 사용하여 빌드된(build)
		SqlSessionFactory 에서 SqlSession을 가져온다.(openSession)
		4. Application이 SqlSession에서 Mapper 인터페이스 구현 개체를 가져온다.
		5. Application이 Mapper 인터페이스의 메소드를 호출한다.
		6. Mapper 인터페이스의 구현 객체가 SqlSession 메소드를 호출하고 SQL문 실행을 요청한다.
		7. SqlSession은 Mapping 파일에서 실행할 SQL문을 가져와서 실행한다.
		


mapper 클래스 안에 id 이름의 메소드가 되는 거랑 같다.